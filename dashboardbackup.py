# =============================================================================
# PARTE 3: DASHBOARD INTERATIVO COM STREAMLIT
# =============================================================================
# Este dashboard exibe KPIs e gr√°ficos interativos para o desafio t√©cnico de e-commerce.
# Usa os CSVs e gr√°ficos gerados na Parte 2.
# Para executar: streamlit run dashboard.py
# Data: 18/07/2025

import streamlit as st
import pandas as pd
import plotly.express as px
import os

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Dashboard E-commerce", layout="wide")

# T√≠tulo do dashboard
st.title("üìä Dashboard Interativo de E-commerce")
st.markdown("An√°lise de vendas, clientes e produtos para 2024")

# Caminho dos arquivos (ajuste para o ambiente local ou servidor)
base_path = "./Ecommerce_Dataset/"  # Substitua pelo caminho correto no seu ambiente

# Carregar CSVs
monthly_revenue = pd.read_csv(base_path + 'monthly_revenue.csv')
rfm = pd.read_csv(base_path + 'rfm_segmentation.csv')

# =============================================================================
# 1. KPIs
# =============================================================================
st.header("1. Indicadores-Chave de Desempenho (KPIs)")

col1, col2, col3 = st.columns(3)
total_revenue = monthly_revenue['total_amount'].sum()
avg_ticket = total_revenue / len(rfm)
unique_customers = len(rfm)

col1.metric("Receita Total (2024)", f"R$ {total_revenue:,.2f}")
col2.metric("Ticket M√©dio", f"R$ {avg_ticket:,.2f}")
col3.metric("Clientes √önicos", f"{unique_customers:,}")

# =============================================================================
# 2. Filtros
# =============================================================================
st.header("2. Filtros")
months = monthly_revenue['order_date'].tolist()
selected_months = st.multiselect("Selecione os meses", months, default=months)

# Filtrar dados por meses selecionados
filtered_revenue = monthly_revenue[monthly_revenue['order_date'].isin(selected_months)]

# =============================================================================
# 3. Gr√°ficos
# =============================================================================
st.header("3. Visualiza√ß√µes")

# 3.1. Tend√™ncia de Receita Mensal
st.subheader("Tend√™ncia de Receita Mensal")
fig_revenue = px.line(filtered_revenue, x='order_date', y='total_amount',
                      title="Receita Mensal (2024)", markers=True)
fig_revenue.update_layout(xaxis_title="M√™s", yaxis_title="Receita (R$)")
st.plotly_chart(fig_revenue, use_container_width=True)

# 3.2. Distribui√ß√£o de Segmentos RFM
st.subheader("Distribui√ß√£o de Segmentos de Clientes (RFM)")
fig_rfm = px.histogram(rfm, x='segment', category_orders={"segment": ["VIP", "Regular", "Ocasional", "Inativo"]},
                       title="Segmenta√ß√£o de Clientes")
fig_rfm.update_layout(xaxis_title="Segmento", yaxis_title="Contagem de Clientes")
st.plotly_chart(fig_rfm, use_container_width=True)

# 3.3. Imagens geradas na Parte 2
st.subheader("Outras Visualiza√ß√µes")
st.image(base_path + 'price_distribution_by_category.png', caption="Distribui√ß√£o de Pre√ßos por Categoria")
st.image(base_path + 'monthly_unique_customers.png', caption="Clientes √önicos por M√™s")
